{"version":3,"sources":["login_bg.png","util/authAPI.ts","util/userStore.ts","login/LoginPage.tsx","nav/TopNav.tsx","dashboard/ModuleCard.tsx","dashboard/Dashboard.tsx","util/profileAPI.ts","staff_profile/StaffProfile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","fetchOtp","email","a","fetch","method","headers","body","JSON","stringify","fetchToken","otp","fetchApps","USER_STORE_KEY","userStore","store","setStore","value","sessionStorage","setItem","getToken","jwt","hasPermission","module","apps","some","name","clear","removeItem","this","parse","getItem","LoginPage","history","useHistory","useState","stage","setStage","setEmail","emailError","setEmailError","OTP","setOTP","snackbar","useSnackbar","loading","setLoading","getOtp","response","json","data","ok","showMessage","detail","replace","window","location","hash","className","style","backgroundImage","BgImg","backgroundSize","backgroundRepeat","noValidate","autoComplete","TextField","required","type","label","variant","placeholder","onChange","e","str","target","test","toUpperCase","error","helperText","Button","size","color","disabled","length","onClick","CircularProgress","href","inputProps","maxLength","TopNav","push","endIcon","fontSize","ModuleCard","props","title","img","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","DUMMY_PROJECT","desc","Dashboard","setApps","getApps","useEffect","map","item","Backdrop","open","sendFetch","url","options","authorization","fetchProfiles","emails","emp_nums","fetchCSV","StaffProfile","activeStep","setActiveStep","setEmails","empNo","setEmpNo","results","setResults","getProfiles","getCSV","text","URL","createObjectURL","Blob","link","document","createElement","setAttribute","String","Date","valueOf","appendChild","click","removeChild","string2arr","replaceAll","trim","split","Stepper","alternativeLabel","Step","StepLabel","multiline","rows","defaultValue","join","missing_emails","missing_emp_nums","profiles","display","height","width","flexGrow","disableSelectionOnClick","autoHeight","columns","field","headerName","minWidth","flex","profile","index","id","startIcon","GetApp","App","SnackbarProps","autoHideDuration","basename","process","path","render","to","LoginHandler","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3a7112c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login_bg.482d8066.png\";","\r\nconst BASE_URL = 'https://mxz0fg1wda.execute-api.ap-southeast-1.amazonaws.com';\r\n\r\nexport const fetchOtp = async (email: string) => {\r\n  return await fetch(`${BASE_URL}/v1/auth/get_otp_email`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n}\r\n\r\nexport const fetchToken = async (email: string, otp: string) => {\r\n  return await fetch(`${BASE_URL}/v1/auth/get_jwt_token`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, otp})\r\n  })\r\n}\r\n\r\nexport const fetchApps = async () => {\r\n  return await fetch(`${BASE_URL}/v1/auth/get_apps`);\r\n}","\r\ninterface IUserStore {\r\n  jwt: string;\r\n  apps: [{\r\n    desc: string;\r\n    name: string;\r\n    title: string;\r\n  }]\r\n}\r\n\r\nconst USER_STORE_KEY = 'USER_STORE';\r\n\r\nclass UserStore {\r\n  private store: IUserStore | null;\r\n  constructor() {\r\n    this.store = JSON.parse(sessionStorage.getItem(USER_STORE_KEY)||'{}');\r\n  }\r\n\r\n  public setStore = (value:IUserStore) => {\r\n    this.store = value;\r\n    sessionStorage.setItem(USER_STORE_KEY, JSON.stringify(value))\r\n  }\r\n\r\n  public getToken = () => {\r\n    return this.store?.jwt;\r\n  }\r\n\r\n  public hasPermission = (module: string) => {\r\n    return this.store?.apps.some(({name}) => module === name);\r\n  }\r\n\r\n  public clear = () => {\r\n    this.store = null;\r\n    sessionStorage.removeItem(USER_STORE_KEY);\r\n  }\r\n}\r\n\r\nconst userStore = new UserStore();\r\n\r\nexport default userStore;","import { Button, CircularProgress, TextField } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BgImg from \"../login_bg.png\";\r\nimport { fetchOtp, fetchToken } from \"../util/authAPI\";\r\nimport userStore from \"../util/userStore\";\r\nimport \"./login.scss\";\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory();\r\n  const [stage, setStage] = useState(\"EMAIL\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const snackbar = useSnackbar();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validateEmail = (str: string) => {\r\n    if (/[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}/.test(str.toUpperCase())) {\r\n      setEmailError(false);\r\n    } else {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const getOtp = async () => {\r\n    setLoading(true);\r\n    const response = await fetchOtp(email);\r\n    const data = await response.json();\r\n    setLoading(false);\r\n    if (response.ok) {\r\n      setStage(\"OTP\");\r\n    } else {\r\n      snackbar.showMessage(\"GetOTP failed: \" + data.detail);\r\n    }\r\n  };\r\n\r\n  const getToken = async () => {\r\n    setLoading(true);\r\n    const response = await fetchToken(email, OTP);\r\n    const data = await response.json();\r\n    setLoading(false);\r\n    if (response.ok) {\r\n      userStore.setStore(data);\r\n      history.replace(\"/\" + window.location.hash);\r\n    } else {\r\n      snackbar.showMessage(\"Login failed: \" + data.detail);\r\n      history.replace(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <section\r\n        className=\"hero\"\r\n        style={{\r\n          backgroundImage: `url(${BgImg})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      ></section>\r\n      <section>\r\n        <div className=\"login-container\">\r\n          <span className=\"title\">\r\n            CapDev<b>Portal</b>\r\n          </span>\r\n          <span className=\"tagline\">\r\n            The Future is <i>Now</i>\r\n          </span>\r\n          {stage === \"EMAIL\" && (\r\n            <>\r\n              <p className=\"text\">\r\n                Enter your Email Address and we will send you a One-Time\r\n                Password (OTP) to enter below.\r\n              </p>\r\n              <form noValidate autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <TextField\r\n                    className=\"textfield\"\r\n                    required\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"e.g. glenn@dsaid.gov.sg\"\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                      validateEmail(e.target.value);\r\n                    }}\r\n                    error={emailError}\r\n                    helperText={emailError && \"Invalid Email\"}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <Button\r\n                    className=\"get-otp\"\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={email.length === 0 || emailError}\r\n                    onClick={() => getOtp()}\r\n                  >\r\n                    <b>GET OTP</b>&nbsp;\r\n                    {loading && <CircularProgress size={24} color=\"inherit\" />}\r\n                  </Button>\r\n                  <div className=\"text register\">\r\n                    <span>Not a registered user yet?</span>\r\n                    <br />\r\n                    <a href=\"#\">Contact Us.</a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </>\r\n          )}\r\n          {stage === \"OTP\" && (\r\n            <>\r\n              <p className=\"text\">\r\n                An OTP has been emailed to you. Enter OTP below.\r\n              </p>\r\n              <form noValidate autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <TextField\r\n                    className=\"textfield\"\r\n                    autoComplete=\"one-time-code\"\r\n                    required\r\n                    type=\"text\"\r\n                    label=\"One-Time Password\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"OTP\"\r\n                    inputProps={{\r\n                      maxLength: 5,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setOTP(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <Button\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => getToken()}\r\n                  >\r\n                    <b>LOGIN</b>&nbsp;\r\n                    {loading && <CircularProgress size={24} color=\"inherit\" />}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"resend\"\r\n                    size=\"large\"\r\n                    onClick={() => getOtp()}\r\n                  >\r\n                    RESEND OTP\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\r\nimport \"./TopNav.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TopNav = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <header>\r\n      <div className=\"content\">\r\n        <div\r\n          className=\"title\"\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          CapDev<b>Portal</b>\r\n        </div>\r\n        <div className=\"logout\">\r\n          <Button\r\n            color=\"default\"\r\n            size=\"large\"\r\n            endIcon={<PowerSettingsNewRoundedIcon fontSize=\"inherit\" />}\r\n            onClick={() => {\r\n              history.replace(\"/logout\");\r\n            }}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userStore from \"../util/userStore\";\r\n\r\ninterface IProps {\r\n  img: string;\r\n  title: string;\r\n  name: string;\r\n}\r\n\r\nconst ModuleCard = (props: IProps) => {\r\n  const { title, img, name } = props;\r\n  const history = useHistory();\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        if (userStore.hasPermission(name)) {\r\n          history.replace(\"/\" + name);\r\n        }\r\n      }}\r\n      className={userStore.hasPermission(name) ? \"\" : \"disabled\"}\r\n    >\r\n      <CardActionArea>\r\n        <CardMedia image={img} title={title} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModuleCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchApps } from \"../util/authAPI\";\r\nimport ModuleCard from \"./ModuleCard\";\r\nimport \"./dashboard.scss\";\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\n\r\ninterface IAppDetail {\r\n  title: string;\r\n  name: string;\r\n  desc: string;\r\n}\r\nconst DUMMY_PROJECT = {\r\n  title: \"Project 1\",\r\n  name: \"project1\",\r\n  desc: \"a dummy project for testing permissions\",\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [apps, setApps] = useState<IAppDetail[]>();\r\n\r\n  const getApps = async () => {\r\n    const response = await fetchApps();\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      setApps([...data.apps, DUMMY_PROJECT]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getApps();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {apps && !!apps.length ? (\r\n        <div className=\"dashboard-container\">\r\n          {apps?.map((item) => (\r\n            <ModuleCard\r\n              key={item.name}\r\n              name={item.name}\r\n              title={item.title}\r\n              img=\"https://picsum.photos/id/4/300/200\"\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Backdrop open>\r\n          <CircularProgress size={64} color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import userStore from \"./userStore\"\r\n\r\nconst BASE_URL = 'https://u7yhkrlx15.execute-api.ap-southeast-1.amazonaws.com';\r\n\r\nexport const sendFetch = async (url:string, options: RequestInit) => {\r\n  return await fetch(BASE_URL+url, {...options, headers: {...options.headers, authorization: `Bearer ${userStore.getToken()}`, 'Content-Type': 'application/json'}})\r\n}\r\n\r\nexport const fetchProfiles = async (emails:string[], emp_nums:string[]) => {\r\n  return await sendFetch('/v1/profiles/fetch_by_json', {\r\n    method: 'POST',\r\n    body: JSON.stringify({emails, emp_nums}),\r\n  })\r\n}\r\n\r\nexport const fetchCSV = async (emails:string[], emp_nums:string[]) => {\r\n  return await sendFetch('/v1/profiles/fetch_by_csv', {\r\n    method: 'POST',\r\n    body: JSON.stringify({emails, emp_nums}),\r\n  })\r\n}\r\n\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { GetApp } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { fetchCSV, fetchProfiles } from \"../util/profileAPI\";\r\nimport \"./staffprofile.scss\";\r\n\r\ninterface IProfileResult {\r\n  missing_emails: string[];\r\n  missing_emp_nums: string[];\r\n  profiles: IProfile[];\r\n}\r\n\r\ninterface IProfile {\r\n  Dept: string;\r\n  \"Display Name\": string;\r\n  Division: string;\r\n  Email: string;\r\n  \"Employee Group\": string;\r\n  \"Employee Number\": string;\r\n  \"HQ/SVC\": string;\r\n  Manager: string;\r\n  \"Org Chain\": string;\r\n  \"Reporting Officer\": string;\r\n  groupname: string;\r\n  large_div: string;\r\n  username: string;\r\n}\r\n\r\nconst StaffProfile = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = [\"Upload Data\", \"Download\"];\r\n  const [emails, setEmails] = useState<string[]>([]);\r\n  const [empNo, setEmpNo] = useState<string[]>([]);\r\n  const [results, setResults] = useState<IProfileResult>();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const goBack = () => {\r\n    if (activeStep === 0) return;\r\n    else {\r\n      setActiveStep(activeStep - 1);\r\n    }\r\n  };\r\n  const getProfiles = async () => {\r\n    setLoading(true);\r\n    const response = await fetchProfiles(emails, empNo);\r\n    const data = await response.json();\r\n    setLoading(false);\r\n    if (response.ok) {\r\n      setResults(data);\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const getCSV = async () => {\r\n    setLoading(true);\r\n    const response = await fetchCSV(emails, empNo);\r\n    const data = await response.text();\r\n    setLoading(false);\r\n    if (response.ok) {\r\n      const url = window.URL.createObjectURL(new Blob([data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", String(new Date().valueOf()) + \".csv\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  };\r\n\r\n  const string2arr = (str: string) =>\r\n    str\r\n      .replaceAll(\"\\n\", \" \")\r\n      .trim()\r\n      .split(/[ ,;]+/);\r\n\r\n  const getColumns = () => {\r\n    return [\r\n      {\r\n        field: \"Display Name\",\r\n        headerName: \"Display Name\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Email\",\r\n        headerName: \"Email Address\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Employee Number\",\r\n        headerName: \"Employee No.\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Reporting Officer\",\r\n        headerName: \"Reporting Officer\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Division\",\r\n        headerName: \"Division\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Employee Group\",\r\n        headerName: \"Employee Group\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"HQ/SVC\",\r\n        headerName: \"HQ/SVC\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Manager\",\r\n        headerName: \"Manager\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n      {\r\n        field: \"Org Chain\",\r\n        headerName: \"Org Chain\",\r\n        minWidth: 200,\r\n        flex: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <div className=\"staff-profile-container\">\r\n      <div className=\"title\">Staff Profile Fetcher</div>\r\n      <div className=\"stepper-container\">\r\n        <Stepper activeStep={activeStep} alternativeLabel>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 0 && (\r\n        <>\r\n          <p className=\"text\">\r\n            Enter list of emails and/or employee numbers to search.\r\n            <br />\r\n            (Deliminate each record by white space or comma or semicolon)\r\n          </p>\r\n          <div className=\"input-container\">\r\n            <TextField\r\n              label=\"Emails\"\r\n              multiline\r\n              rows={15}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setEmails(string2arr(e.target.value))}\r\n              defaultValue={emails.join(\"\\n\")}\r\n            />\r\n            <TextField\r\n              label=\"Employee Numbers\"\r\n              multiline\r\n              rows={15}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setEmpNo(string2arr(e.target.value))}\r\n              defaultValue={empNo.join(\"\\n\")}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {activeStep === 1 &&\r\n        results &&\r\n        (!!results.missing_emails.length ||\r\n          !!results.missing_emp_nums.length) && (\r\n          <div className=\"error-results-container\">\r\n            <div className=\"error-text\">\r\n              List of emails and/or employee numbers not found\r\n            </div>\r\n            <div className=\"error-table-container\">\r\n              {!!results.missing_emails.length && (\r\n                <div className=\"error-table\">\r\n                  <div className=\"error-header\">Email Address</div>\r\n                  {results.missing_emails.map((email) => (\r\n                    <div key={email} className=\"error-row\">\r\n                      {email}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {!!results.missing_emp_nums.length && (\r\n                <div className=\"error-table\">\r\n                  <div className=\"error-header\">Employee No.</div>\r\n                  {results.missing_emp_nums.map((empNo) => (\r\n                    <div key={empNo} className=\"error-row\">\r\n                      {empNo}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      {activeStep === 1 && results && !!results.profiles.length && (\r\n        <div className=\"profiles-container\">\r\n          <div className=\"profiles-text\">Found Profiles</div>\r\n          <div style={{ display: \"flex\", height: \"100%\", width: \"100%\" }}>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <DataGrid\r\n                disableSelectionOnClick\r\n                autoHeight\r\n                columns={getColumns()}\r\n                rows={results.profiles.map((profile, index) => {\r\n                  return {\r\n                    ...profile,\r\n                    id: index,\r\n                  };\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"button-container\">\r\n        <Button size=\"large\" onClick={() => goBack()} disabled={loading}>\r\n          BACK\r\n        </Button>\r\n        {activeStep === 0 && (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => getProfiles()}\r\n            disabled={loading}\r\n          >\r\n            NEXT&nbsp;\r\n            {loading && <CircularProgress size={24} color=\"inherit\" />}\r\n          </Button>\r\n        )}\r\n        {activeStep === 1 && (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            startIcon={<GetApp />}\r\n            onClick={() => getCSV()}\r\n            disabled={loading || !results?.profiles.length}\r\n          >\r\n            DOWNLOAD CSV&nbsp;\r\n            {loading && <CircularProgress size={24} color=\"inherit\" />}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffProfile;\r\n","import React, { FC } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport LoginPage from \"./login/LoginPage\";\nimport { SnackbarProvider } from \"material-ui-snackbar-provider\";\nimport TopNav from \"./nav/TopNav\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport StaffProfile from \"./staff_profile/StaffProfile\";\nimport userStore from \"./util/userStore\";\n\nfunction App() {\n  return (\n    <SnackbarProvider SnackbarProps={{ autoHideDuration: 4000 }}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            path=\"/login\"\n            render={(props) => {\n              const isLoggedIn = !!userStore.getToken();\n              if (isLoggedIn) {\n                props.history.replace(\"/\");\n              }\n              return <LoginPage />;\n            }}\n          />\n          <Route\n            path=\"/logout\"\n            render={() => {\n              userStore.clear();\n              return <Redirect to=\"/login\" />;\n            }}\n          />\n        </Switch>\n        <LoginHandler>\n          <Route\n            render={() => {\n              return (\n                <>\n                  <TopNav />\n                  <div className=\"main\">\n                    <Switch>\n                      <Route path=\"/staff_profiles\" component={StaffProfile} />\n                      <Route path=\"/\" component={Dashboard} />\n                    </Switch>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </LoginHandler>\n      </BrowserRouter>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n\nexport const LoginHandler: FC = ({ children }) => {\n  //replace with actual login authentication\n  const isLoggedIn = !!userStore.getToken();\n  return isLoggedIn ? <>{children}</> : <Redirect to=\"/login\" />;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}